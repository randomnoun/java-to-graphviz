digraph G {
  node [
    shape = rect;
    fontname = "Handlee";
  ]
  edge [
    fontname = "Handlee";
  ]
  bgcolor = transparent;
  fontname = "Handlee";
  compound = true;
  s_10 [
    class = "methodDeclaration";
    label = "MethodDeclaration";
    fillcolor = white;
    style = filled;
  ];
  s_10_6 [
    class = "block";
    label = "Block";
    fillcolor = white;
    style = filled;
  ];
  s_11 [
    class = "expressionStatement";
    label = "ExpressionStatement";
    fillcolor = white;
    style = filled;
  ];
  s_11_2 [
    class = "assignment";
    label = "=";
    fillcolor = white;
    style = filled;
  ];
  s_11_3 [
    class = "fieldAccess";
    label = "field i";
    fillcolor = white;
    style = filled;
  ];
  s_11_4 [
    class = "thisExpression";
    label = "this";
    fillcolor = white;
    style = filled;
  ];
  s_11_6 [
    class = "simpleName";
    label = "i";
    fillcolor = white;
    style = filled;
  ];
  s_15 [
    class = "methodDeclaration";
    label = "MethodDeclaration";
    fillcolor = white;
    style = filled;
  ];
  s_15_3 [
    class = "block";
    label = "Block";
    fillcolor = white;
    style = filled;
  ];
  s_18 [
    class = "variableDeclaration";
    label = "VariableDeclaration";
    fillcolor = white;
    style = filled;
  ];
  s_18_2 [
    class = "variableDeclarationFragment";
    label = "long[] numbers";
    fillcolor = white;
    style = filled;
  ];
  s_18_4 [
    class = "arrayCreation";
    label = "new long[]";
    fillcolor = white;
    style = filled;
  ];
  s_18_5 [
    class = "arrayInitializer";
    label = "{ ... }";
    fillcolor = white;
    style = filled;
  ];
  s_18_6 [
    class = "numberLiteral literal";
    label = "3L";
    fillcolor = white;
    style = filled;
  ];
  s_18_7 [
    class = "numberLiteral literal";
    label = "2L";
    fillcolor = white;
    style = filled;
  ];
  s_18_8 [
    class = "numberLiteral literal";
    label = "1L";
    fillcolor = white;
    style = filled;
  ];
  s_19 [
    class = "variableDeclaration";
    label = "VariableDeclaration";
    fillcolor = white;
    style = filled;
  ];
  s_19_2 [
    class = "variableDeclarationFragment";
    label = "long[] moreNumbers";
    fillcolor = white;
    style = filled;
  ];
  s_19_4 [
    class = "arrayCreation";
    label = "new long[]";
    fillcolor = white;
    style = filled;
  ];
  s_19_5 [
    class = "numberLiteral literal";
    label = "100";
    fillcolor = white;
    style = filled;
  ];
  s_20 [
    class = "variableDeclaration";
    label = "VariableDeclaration";
    fillcolor = white;
    style = filled;
  ];
  s_20_2 [
    class = "variableDeclarationFragment";
    label = "long[][][] evenMoreNumbers";
    fillcolor = white;
    style = filled;
  ];
  s_20_4 [
    class = "arrayCreation";
    label = "new long[][][]";
    fillcolor = white;
    style = filled;
  ];
  s_20_5 [
    class = "numberLiteral literal";
    label = "100";
    fillcolor = white;
    style = filled;
  ];
  s_20_6 [
    class = "numberLiteral literal";
    label = "3";
    fillcolor = white;
    style = filled;
  ];
  s_20_7 [
    class = "numberLiteral literal";
    label = "1";
    fillcolor = white;
    style = filled;
  ];
  s_22 [
    class = "variableDeclaration";
    label = "VariableDeclaration";
    fillcolor = white;
    style = filled;
  ];
  s_22_3 [
    class = "variableDeclarationFragment";
    label = "MyNumber n";
    fillcolor = white;
    style = filled;
  ];
  s_22_5 [
    class = "classInstanceCreation";
    label = "new MyNumber()";
    fillcolor = white;
    style = filled;
  ];
  s_22_7 [
    class = "numberLiteral literal";
    label = "1234L";
    fillcolor = white;
    style = filled;
  ];
  m_12 [
    class = "method end";
    label = "return";
    fillcolor = white;
    style = filled;
  ];
  m_24 [
    class = "method end";
    label = "return";
    fillcolor = white;
    style = filled;
  ];
  s_10 -> s_10_6;
  s_10_6 -> s_11;
  s_11 -> s_11_6;
  s_11_6 -> s_11_4;
  s_11_4 -> s_11_3;
  s_11_3 -> s_11_2;
  s_11_2 -> m_12;
  s_15 -> s_15_3;
  s_15_3 -> s_18;
  s_18 -> s_18_6;
  s_18_6 -> s_18_7;
  s_18_7 -> s_18_8;
  s_18_8 -> s_18_5;
  s_18_5 -> s_18_4;
  s_18_4 -> s_18_2;
  s_18_2 -> s_19;
  s_19 -> s_19_5;
  s_19_5 -> s_19_4;
  s_19_4 -> s_19_2;
  s_19_2 -> s_20;
  s_20 -> s_20_5;
  s_20_5 -> s_20_6;
  s_20_6 -> s_20_7;
  s_20_7 -> s_20_4;
  s_20_4 -> s_20_2;
  s_20_2 -> s_22;
  s_22 -> s_22_7;
  s_22_7 -> s_22_5;
  s_22_5 -> s_22_3;
  s_22_3 -> m_24;

  subgraph cluster_m_10 {
    label="method MyNumber";
    labeljust = "l";
    ranksep = 0.5;
    pencolor = transparent;
    s_10; s_10_6; s_11; s_11_2; s_11_3; s_11_4; s_11_6; m_12;
  }
  subgraph cluster_m_15 {
    label="method testExpressions";
    labeljust = "l";
    ranksep = 0.5;
    pencolor = transparent;
    s_15; s_15_3; s_18; s_18_2; s_18_4; s_18_5; s_18_6; s_18_7; s_18_8; s_19; s_19_2; s_19_4; s_19_5; s_20; s_20_2; s_20_4; s_20_5; s_20_6; s_20_7; s_22; s_22_3; s_22_5; s_22_7; m_24;
  }
}

