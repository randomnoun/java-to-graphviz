digraph G_7 {
  node [
    shape = rect;
    fontname = "Handlee";
  ]
  edge [
    fontname = "Handlee";
  ]
  bgcolor = transparent;
  fontname = "Handlee";
  compound = true;
  s_95 [
    class = "block";
    label = "Block";
    fillcolor = white;
    style = filled;
  ];
  s_96 [
    class = "expressionStatement";
    label = "ExpressionStatement";
    fillcolor = white;
    style = filled;
  ];
  s_96_2 [
    class = "methodInvocation";
    label = "before()";
    fillcolor = white;
    style = filled;
  ];
  s_97 [
    class = "switch";
    label = "Switch";
    fillcolor = white;
    style = filled;
  ];
  s_97_2 [
    class = "simpleName";
    label = "i";
    fillcolor = white;
    style = filled;
  ];
  case_98 [
    class = "switchCase";
    label = " case ?";
    fillcolor = white;
    shape = diamond;
    style = filled;
  ];
  s_98 [
    class = "numberLiteral literal";
    label = "0";
    fillcolor = white;
    style = filled;
  ];
  s_98_2 [
    class = "expressionStatement";
    label = "ExpressionStatement";
    fillcolor = white;
    style = filled;
  ];
  s_98_3 [
    class = "methodInvocation";
    label = "println()";
    fillcolor = white;
    style = filled;
  ];
  case_99 [
    class = "switchCase";
    label = " case ?";
    fillcolor = white;
    shape = diamond;
    style = filled;
  ];
  s_99 [
    class = "numberLiteral literal";
    label = "1";
    fillcolor = white;
    style = filled;
  ];
  s_99_2 [
    class = "expressionStatement";
    label = "ExpressionStatement";
    fillcolor = white;
    style = filled;
  ];
  s_99_3 [
    class = "methodInvocation";
    label = "println()";
    fillcolor = white;
    style = filled;
  ];
  s_99_5 [
    class = "break";
    label = "Break";
    fillcolor = white;
    style = filled;
  ];
  case_100 [
    class = "switchCase";
    label = " case ?";
    fillcolor = white;
    shape = diamond;
    style = filled;
  ];
  s_100 [
    class = "expressionStatement";
    label = "ExpressionStatement";
    fillcolor = white;
    style = filled;
  ];
  s_100_2 [
    class = "methodInvocation";
    label = "println()";
    fillcolor = white;
    style = filled;
  ];
  s_102 [
    class = "expressionStatement";
    label = "ExpressionStatement";
    fillcolor = white;
    style = filled;
  ];
  s_102_2 [
    class = "methodInvocation";
    label = "after()";
    fillcolor = white;
    style = filled;
  ];
  s_95 -> s_96;
  s_96 -> s_96_2;
  s_96_2 -> s_97_2;
  s_97_2 -> s_97;
  s_97 -> s_98;
  s_98 -> case_98;
  case_98 -> s_98_2 [
    label="Y";
  ];
  s_98_2 -> s_98_3;
  case_98 -> s_99 [
    label="N";
  ];
  s_99 -> case_99;
  s_98_3 -> s_99_2 [
    label="fallthrough";
    color = red;
  ];
  case_99 -> s_99_2 [
    label="Y";
  ];
  s_99_2 -> s_99_3;
  s_99_3 -> s_99_5;
  case_99 -> case_100 [
    label="N";
  ];
  case_100 -> s_100 [
    label="Y";
  ];
  s_100 -> s_100_2;
  s_99_5 -> s_102 [
    label="break";
    color = red;
  ];
  s_100_2 -> s_102;
  s_97 -> s_102;
  s_102 -> s_102_2;

}

