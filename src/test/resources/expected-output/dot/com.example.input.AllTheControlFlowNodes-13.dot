digraph G_14 {
  node [
    shape = rect;
    fontname = "Handlee";
  ]
  edge [
    fontname = "Handlee";
  ]
  bgcolor = transparent;
  fontname = "Handlee";
  compound = true;
  s_161 [
    class = "methodDeclaration";
    label = "MethodDeclaration";
    fillcolor = white;
    style = filled;
  ];
  s_161_3 [
    class = "block";
    label = "Block";
    fillcolor = white;
    style = filled;
  ];
  s_162 [
    class = "expressionStatement";
    label = "the beginning";
    fillcolor = grey;
    style = filled;
  ];
  s_162_2 [
    class = "methodInvocation";
    label = "before()";
    fillcolor = white;
    style = filled;
  ];
  s_163 [
    class = "expressionStatement something";
    label = "well hello there";
    fillcolor = white;
    color = red;
    style = filled;
  ];
  s_163_2 [
    class = "methodInvocation";
    label = "someCode()";
    fillcolor = white;
    style = filled;
  ];
  s_164 [
    class = "special expressionStatement something";
    label = "well hello there again";
    fillcolor = white;
    color = green;
    style = filled;
  ];
  s_164_2 [
    class = "methodInvocation";
    label = "someOtherCode()";
    fillcolor = white;
    style = filled;
  ];
  s_164_4 [
    class = "booleanLiteral literal";
    label = "true";
    fillcolor = white;
    style = filled;
  ];
  unique [
    class = "expressionStatement something";
    label = "righteo then";
    fillcolor = white;
    color = red;
    shape = hexagon;
    style = filled;
  ];
  s_165 [
    class = "methodInvocation";
    label = "someOtherCode()";
    fillcolor = white;
    style = filled;
  ];
  s_165_3 [
    class = "booleanLiteral literal";
    label = "false";
    fillcolor = white;
    style = filled;
  ];
  m_166 [
    class = "method end";
    label = "return";
    fillcolor = white;
    style = filled;
  ];
  s_161 -> s_161_3;
  s_161_3 -> s_162;
  s_162 -> s_162_2;
  s_162_2 -> s_163;
  s_163 -> s_163_2;
  s_163_2 -> s_164;
  s_164 -> s_164_4;
  s_164_4 -> s_164_2;
  s_164_2 -> unique;
  unique -> s_165_3;
  s_165_3 -> s_165;
  s_165 -> m_166;

  subgraph cluster_m_161 {
    label="method example3";
    labeljust = "l";
    ranksep = 0.5;
    pencolor = transparent;
    s_161; s_161_3; s_162; s_162_2; s_163; s_163_2; s_164; s_164_2; s_164_4; unique; s_165; s_165_3; m_166;
  }
}

