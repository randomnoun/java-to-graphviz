digraph G_3 {
  node [
    shape = rect;
    fontname = "Handlee";
  ]
  edge [
    fontname = "Handlee";
  ]
  bgcolor = transparent;
  fontname = "Handlee";
  compound = true;
  s_71_2 [
    class = "methodInvocation";
    label = "before()";
    fillcolor = white;
    style = filled;
  ];
  for_72 [
    class = "for";
    label = "for";
    fillcolor = white;
    shape = diamond;
    style = filled;
  ];
  s_72 [
    class = "assignment initialiser";
    label = "=";
    fillcolor = white;
    style = filled;
  ];
  s_72_2 [
    class = "simpleName";
    label = "i";
    fillcolor = white;
    style = filled;
  ];
  s_72_3 [
    class = "numberLiteral literal";
    label = "0";
    fillcolor = white;
    style = filled;
  ];
  s_72_4 [
    class = "expression infixExpression";
    label = "<";
    fillcolor = white;
    style = filled;
  ];
  s_72_5 [
    class = "simpleName";
    label = "i";
    fillcolor = white;
    style = filled;
  ];
  s_72_6 [
    class = "numberLiteral literal";
    label = "10";
    fillcolor = white;
    style = filled;
  ];
  s_72_7 [
    class = "postfixExpression updater";
    label = "postfixOp ++";
    fillcolor = white;
    style = filled;
  ];
  s_72_8 [
    class = "simpleName";
    label = "i";
    fillcolor = white;
    style = filled;
  ];
  s_73_2 [
    class = "methodInvocation";
    label = "println()";
    fillcolor = white;
    style = filled;
  ];
  s_73_4 [
    class = "simpleName";
    label = "i";
    fillcolor = white;
    style = filled;
  ];
  s_75_2 [
    class = "methodInvocation";
    label = "after()";
    fillcolor = white;
    style = filled;
  ];
  s_71_2 -> s_72_3;
  s_72_3 -> s_72_2;
  s_72_2 -> s_72;
  s_72 -> s_72_5;
  s_72_5 -> s_72_6;
  s_72_6 -> s_72_4;
  s_72_4 -> for_72;
  s_73_4 -> s_73_2;
  s_73_2 -> s_72_8;
  s_72_8 -> s_72_7;
  s_72_7 -> s_72_5 [
    label="for";
    style = dashed;
  ];
  for_72 -> s_75_2 [
    label="N";
  ];
  for_72 -> s_73_4 [
    label="Y";
  ];

}

