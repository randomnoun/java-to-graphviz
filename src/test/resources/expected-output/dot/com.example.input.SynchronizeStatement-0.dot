digraph G {
  node [
    shape = rect;
    fontname = "Handlee";
  ]
  edge [
    fontname = "Handlee";
  ]
  bgcolor = transparent;
  fontname = "Handlee";
  compound = true;
  s_10 [
    class = "methodDeclaration";
    label = "MethodDeclaration";
    fillcolor = white;
    style = filled;
  ];
  s_10_3 [
    class = "block";
    label = "Block";
    fillcolor = white;
    style = filled;
  ];
  s_11 [
    class = "variableDeclaration";
    label = "VariableDeclaration";
    fillcolor = white;
    style = filled;
  ];
  s_11_3 [
    class = "variableDeclarationFragment";
    label = "Object things";
    fillcolor = white;
    style = filled;
  ];
  s_11_5 [
    class = "nullLiteral literal";
    label = "null";
    fillcolor = white;
    style = filled;
  ];
  s_13 [
    class = "expressionStatement";
    label = "ExpressionStatement";
    fillcolor = white;
    style = filled;
  ];
  s_13_2 [
    class = "methodInvocation";
    label = "println()";
    fillcolor = white;
    style = filled;
  ];
  s_13_3 [
    class = "qualifiedName";
    label = "System.out";
    fillcolor = white;
    style = filled;
  ];
  s_13_7 [
    class = "stringLiteral literal";
    label = "\"Just follow in de back and naturally harmonizing\"";
    fillcolor = white;
    style = filled;
  ];
  s_14 [
    class = "expressionStatement";
    label = "ExpressionStatement";
    fillcolor = white;
    style = filled;
  ];
  s_14_2 [
    class = "methodInvocation";
    label = "println()";
    fillcolor = white;
    style = filled;
  ];
  s_14_3 [
    class = "qualifiedName";
    label = "System.out";
    fillcolor = white;
    style = filled;
  ];
  s_14_7 [
    class = "stringLiteral literal";
    label = "\"Climb into position wit\"";
    fillcolor = white;
    style = filled;
  ];
  s_15 [
    class = "synchronized";
    label = "Synchronized";
    fillcolor = white;
    style = filled;
  ];
  s_15_2 [
    class = "simpleName";
    label = "things";
    fillcolor = white;
    style = filled;
  ];
  s_15_3 [
    class = "block";
    label = "Block";
    fillcolor = white;
    style = filled;
  ];
  s_16 [
    class = "expressionStatement";
    label = "ExpressionStatement";
    fillcolor = white;
    style = filled;
  ];
  s_16_2 [
    class = "methodInvocation";
    label = "println()";
    fillcolor = white;
    style = filled;
  ];
  s_16_3 [
    class = "qualifiedName";
    label = "System.out";
    fillcolor = white;
    style = filled;
  ];
  s_16_7 [
    class = "stringLiteral literal";
    label = "\"Live from out de ghetto we maximizing\"";
    fillcolor = white;
    style = filled;
  ];
  s_17 [
    class = "expressionStatement";
    label = "ExpressionStatement";
    fillcolor = white;
    style = filled;
  ];
  s_17_2 [
    class = "methodInvocation";
    label = "println()";
    fillcolor = white;
    style = filled;
  ];
  s_17_3 [
    class = "qualifiedName";
    label = "System.out";
    fillcolor = white;
    style = filled;
  ];
  s_17_7 [
    class = "stringLiteral literal";
    label = "\"Sound o de groove armada we superstylin'\"";
    fillcolor = white;
    style = filled;
  ];
  s_19 [
    class = "expressionStatement";
    label = "ExpressionStatement";
    fillcolor = white;
    style = filled;
  ];
  s_19_2 [
    class = "methodInvocation";
    label = "println()";
    fillcolor = white;
    style = filled;
  ];
  s_19_3 [
    class = "qualifiedName";
    label = "System.out";
    fillcolor = white;
    style = filled;
  ];
  s_19_7 [
    class = "stringLiteral literal";
    label = "\"Superstylin', we superstylin'\"";
    fillcolor = white;
    style = filled;
  ];
  s_24 [
    class = "methodDeclaration";
    label = "MethodDeclaration";
    fillcolor = white;
    style = filled;
  ];
  s_24_3 [
    class = "block";
    label = "Block";
    fillcolor = white;
    style = filled;
  ];
  m_22 [
    class = "method end";
    label = "return";
    fillcolor = white;
    style = filled;
  ];
  m_27 [
    class = "method end";
    label = "return";
    fillcolor = white;
    style = filled;
  ];
  s_10 -> s_10_3;
  s_10_3 -> s_11;
  s_11 -> s_11_5;
  s_11_5 -> s_11_3;
  s_11_3 -> s_13;
  s_13 -> s_13_3;
  s_13_3 -> s_13_7;
  s_13_7 -> s_13_2;
  s_13_2 -> s_14;
  s_14 -> s_14_3;
  s_14_3 -> s_14_7;
  s_14_7 -> s_14_2;
  s_14_2 -> s_15_2;
  s_15_2 -> s_15;
  s_15 -> s_15_3;
  s_15_3 -> s_16;
  s_16 -> s_16_3;
  s_16_3 -> s_16_7;
  s_16_7 -> s_16_2;
  s_16_2 -> s_17;
  s_17 -> s_17_3;
  s_17_3 -> s_17_7;
  s_17_7 -> s_17_2;
  s_17_2 -> s_19;
  s_19 -> s_19_3;
  s_19_3 -> s_19_7;
  s_19_7 -> s_19_2;
  s_19_2 -> m_22;
  s_24 -> s_24_3;
  s_24_3 -> m_27;

  subgraph cluster_m_10 {
    label="method testSuperStylin";
    labeljust = "l";
    ranksep = 0.5;
    pencolor = transparent;
    s_10; s_10_3; s_11; s_11_3; s_11_5; s_13; s_13_2; s_13_3; s_13_7; s_14; s_14_2; s_14_3; s_14_7; s_15; s_15_2; s_19; s_19_2; s_19_3; s_19_7; m_22;
    subgraph cluster_sync_15 {
      label="synchronized";
      labeljust = "l";
      ranksep = 0.5;
      pencolor = black;
      s_15_3; s_16; s_16_2; s_16_3; s_16_7; s_17; s_17_2; s_17_3; s_17_7;
    }
  }
  subgraph cluster_m_24 {
    label="method testFreeStyler";
    labeljust = "l";
    ranksep = 0.5;
    pencolor = transparent;
    s_24; s_24_3; m_27;
  }
}

